data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", linetype = "dotted") +
geom_smooth(color = "red") +
coord_cartesian(ylim = c(-50000, 200000))
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
geom_smooth(color = "red") +
coord_cartesian(ylim = c(-50000, 200000))
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-50000, 200000))
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000))
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000)) +
labs(title = "Residuals look non-systematic",
y = "Residuals",
x = element_blank()) +
theme_bw()
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000)) +
labs(title = "Residuals look non-systematic",
y = "Residuals",
x = element_blank()) +
theme_bw(axis.x.text = element_blank())
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000)) +
labs(title = "Residuals look non-systematic",
y = "Residuals",
x = element_blank()) +
theme_bw() +
theme(axis.x.text = element_blank())
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000)) +
labs(title = "Residuals look non-systematic",
y = "Residuals",
x = element_blank()) +
theme_bw(axis.text.x = element_blank())
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000)) +
labs(title = "Residuals look non-systematic",
y = "Residuals",
x = element_blank()) +
theme_bw() +
theme(axis.text.x = element_blank())
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000)) +
labs(title = "Residuals look non-systematic",
y = "Residuals",
x = element_blank()) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_y_continuous(label = dollar)
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 25000)) +
labs(title = "Do the residuals (observed - fitted) look non-systematic? ",
y = "Residuals",
x = element_blank()) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_y_continuous(label = dollar)
plot(lm1)
lm1
lm1 <- lm(Weekly_Sales ~ factor(Store), train)
lm1 %>% summary %>% names
lm1$r.squared
lm1 %>% summary$r.squared
lm1 %>% summary %>% select(r.squared)
lm1 %>% summary
lm1 %>% summary %>% select($r.squared)
lm1 %>% summary["r.squared"]
summary(lm1)$r.squared
data_frame(res = summary(lm1)$residuals, index = 1:length(summary(lm1)$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 25000)) +
labs(title = "Do the residuals (observed - fitted) look non-systematic? ",
y = "Residuals",
x = element_blank()) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_y_continuous(label = dollar)
plot(lm1)
par(mfrow=c(2,2)) # Change the panel layout to 2 x 2
plot(lm1)
par(mfrow=c(1,1)) # Change back to 1 x 1
par(mfrow=c(2,2)) # Change the panel layout to 2 x 2
plot(lm1)
par(mfrow=c(1,1)) # Most prefer to change immediately back to 1 x 1, avoid later surprises
lm2 <- lm(Weekly_Sales ~ IsHoliday, train)
plot(lm2)
train[95374,]
print(train[95374,])
train %>%
filter(95374)
train %>%
filter(rownumber(95374))
train %>%
slice(95374)
train %>%
slice(95374) %>%
select(*)
train %>%
slice(95374) %>%
names
train %>%
slice(95374) %>%
select(Store, Date, Holiday, Weekly_Sales)
lm3 <- lm(Weekly_Sales ~ Size, train)
plot(lm3)
train[95374]
train[,95374]
train[95374,]
train[[95374]]
train %>% slice(95374)
train %>% slice(338014)
train %>%
slice(95374) %>%
select(Store, Date, Holiday, Weekly_Sales)
train %>%
slice(95374) %>% names
select(Date, Holiday, Weekly_Sales)
train %>%
slice(95374) %>%
select(Store, Date, Holiday, Weekly_Sales)
select(Date, Holiday, Weekly_Sales)
train %>%
select(Store, Date, Holiday, Weekly_Sales) %>%
slice(95374)
slice(95374L)
train %>%
select(Store, Date, Holiday, Weekly_Sales) %>%
slice(95374:95376)
train %>%
select(Store, Date, Holiday, Weekly_Sales)
train
train %>%
select(Store, Date, IsHoliday, Weekly_Sales) %>%
slice(95374:95376)
train %>%
select(Store, Date, IsHoliday, Weekly_Sales) %>%
slice(95374:95376)
train %>% select(Store, Date, IsHoliday, Weekly_Sales) %>% slice(95374:95376)
train %>% select(Store, Date, IsHoliday, Weekly_Sales) %>% slice(95374)
train %>% select(Store, Date, IsHoliday, Weekly_Sales) %>% slice(95374,338014)
train %>% select(Store, Date, IsHoliday, Weekly_Sales) %>% slice(95374, 338014)
train %>% select(Store, Date, IsHoliday, Weekly_Sales) %>% slice(c(95374, 338014))
lm(Weekly_Sales ~ IsHoliday, train) %>% plot
par(mfrow=c(2,2)) # Change the panel layout to 2 x 2
lm(Weekly_Sales ~ ., train) %>% plot
par(mfrow=c(2,2)) # Change the panel layout to 2 x 2
lm(Weekly_Sales ~ ., train) %>% plot
train %>% select(Store, Date, IsHoliday, Weekly_Sales) %>% slice(c(224464, 37254, 954266))
#Load necessary libraries
#install.packages("tidyverse")
#install.packages("magrittr")
#install.packages("Hmisc")
#install.packages("scales")
#install.packages("caret")
library(caret)
library(lubridate)
library(stringr)
library(broom)
library(scales)
library(Hmisc)
library(magrittr)
library(tidyverse)
#Load data
train <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
stores <- read_csv("data/stores.csv")
features <- read_csv("data/features.csv")
#Make full data set with all tables combined
train %<>% mutate(is_train = 1)
test %<>% mutate(is_train = 0)
full <- train %>%
bind_rows(test) %>%
left_join(stores, "Store") %>%
left_join(features, c("Store", "Date")) %>%
select(-IsHoliday.x) %>%
rename(IsHoliday = IsHoliday.y)
#Add specific holiday to data set
full %<>%
left_join(data_frame(Date = as.Date(c("2010-02-12", "2011-02-11", "2012-02-10", "2013-02-08",
"2010-09-10", "2011-09-09", "2012-09-07", "2013-09-06",
"2010-11-26", "2011-11-25", "2012-11-23", "2013-11-29",
"2010-12-31", "2011-12-30", "2012-12-28", "2013-12-27"
)),
Holiday = c(rep("Superbowl", 4),
rep("LaborDay", 4),
rep("Thanksgiving", 4),
rep("Christmas", 4)
)
),
by = "Date"
)
#Look at full dataset
#glimpse(full)
summary(full)
#Split back into train and test sets with complete features
train <- full %>%
filter(is_train == 1) %>%
select(-is_train)
test <- full %>%
filter(is_train == 0) %>%
select(-is_train)
rm(features, full, stores)
summary(lm(Weekly_Sales ~ Unemployment * IsHoliday, sample_frac(train, .1)))
library(ggvis)
library(caret)
library(lubridate)
library(stringr)
library(broom)
library(scales)
library(Hmisc)
library(magrittr)
library(tidyverse)
#Load data
df <- read_csv("data/train.csv")
stores <- read_csv("data/stores.csv")
features <- read_csv("data/features.csv")
#Make full data set with all tables combined
df %<>%
left_join(stores, "Store") %>%
left_join(features, c("Store", "Date")) %>%
select(-IsHoliday.x) %>%
rename(IsHoliday = IsHoliday.y)
#Add specific holidays to data set
df %<>% left_join(data_frame(Date = as.Date(c("2010-02-12", "2011-02-11", "2012-02-10", "2013-02-08",
"2010-09-10", "2011-09-09", "2012-09-07", "2013-09-06",
"2010-11-26", "2011-11-25", "2012-11-23", "2013-11-29",
"2010-12-31", "2011-12-30", "2012-12-28", "2013-12-27")),
Holiday = c(rep("Superbowl", 4),
rep("LaborDay", 4),
rep("Thanksgiving", 4),
rep("Christmas", 4)
)
),
by = "Date" )
#Look at full dataset
glimpse(df)
summary(df)
#Remove extra dataframes from memory
rm(features, stores)
df %<>% mutate(Store = factor(Store),
Dept = factor(Dept),
Type = factor(Type),
IsHoliday = factor(IsHoliday),
Holiday = ifelse(is.na(Holiday), "None", Holiday),
Holiday = factor(Holiday),
MarkDown1 = ifelse(is.na(MarkDown1), 0, MarkDown1),
MarkDown2 = ifelse(is.na(MarkDown2), 0, MarkDown2),
MarkDown3 = ifelse(is.na(MarkDown3), 0, MarkDown3),
MarkDown4 = ifelse(is.na(MarkDown4), 0, MarkDown4),
MarkDown5 = ifelse(is.na(MarkDown5), 0, MarkDown5),
Size = as.numeric(Size),
Month = factor(month(Date)),
Year = year(Date),
Quarter = factor(quarter(Date))
)
#Shuffle dataset into random order
df <- df[sample(1:nrow(df)), ]
set.seed(1234)
#Add index column
df %<>%
mutate(index = 1:nrow(.))
#Build test set out of 30% of total data
test <- sample_frac(df, 0.3)
#Rebuild train set out of rows not in test set
train <- df %>%
filter(!index %in% test$index)
summary(lm(Weekly_Sales ~ Unemployment * IsHoliday, sample_frac(train, .1)))
summary(lm(Weekly_Sales ~ Unemployment * IsHoliday, train))
summary(lm(Weekly_Sales ~ IsHoliday * Unemployment, train))
summary(lm(Weekly_Sales ~ IsHoliday, train))
summary(lm(Weekly_Sales ~ Holiday, train))
summary(lm(Weekly_Sales ~ unemployment, train))
summary(lm(Weekly_Sales ~ Unemployment, train))
summary(lm(Weekly_Sales ~ Unemployment + IsHoliday, train))
summary(lm(Weekly_Sales ~ Unemployment, train))
summary(lm(Weekly_Sales ~ Unemployment + IsHoliday, train))
summary(lm(Weekly_Sales ~ Unemployment, train))
summary(lm(Weekly_Sales ~ Unemployment + IsHoliday, train))
summary(lm(Weekly_Sales ~ Unemployment * IsHoliday, train))
ggplot(train, aes(Temperature, Weekly_Sales)) +
geom_point() +
geom_smooth()
summary(lm(Weekly_Sales ~ Temperature, train))
summary(lm(Weekly_Sales ~ Temperature^2, train))
summary(lm(Weekly_Sales ~ Temperature*Temperature, train))
summary(lm(Weekly_Sales ~ Store, train))
summary(lm(Weekly_Sales ~ Dept, train))
summary(lm(Weekly_Sales ~ Dept, train)) %>%
tidy
summary(lm(Weekly_Sales ~ Dept, train)) %>%
tidy %>%
arrange(estimate)
summary(lm(Weekly_Sales ~ Dept, train)) %>%
tidy %>%
arrange(estimate) %>%
mutate(rank = rank(estimate))
summary(lm(Weekly_Sales ~ Dept, train)) %>%
tidy %>%
arrange(estimate) %>%
mutate(rank = rank(estimate)) %>%
filter(rank == min(rank) | rank == max(rank))
train %>%
select(Weekly_Sales, Dept) %>%
mutate(IsDept92 = Dept == 92)
train %>%
select(Weekly_Sales, Dept) %>%
mutate(IsDept92 = Dept == 92) %>%
filter(IsDept92 == T)
train %>%
select(Weekly_Sales, Dept) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92, .) %>%
summary
train %>%
select(Weekly_Sales, Dept, IsHoliday) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92 * IsHoliday, .) %>%
summary
train %>%
select(Weekly_Sales, Dept, Unemployment) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92 * Unemployment, .) %>%
summary
train %>%
select(Weekly_Sales, Dept) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92, .) %>%
summary
#What if you control for IsHoliday?
train %>%
select(Weekly_Sales, Dept, IsHoliday) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92 * IsHoliday, .) %>%
summary
#Is there an interaction effect of unemployment rate on performance of Dept 92? Probably a discretionary item.
train %>%
select(Weekly_Sales, Dept, Unemployment) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92 * Unemployment, .) %>%
summary
train %>%
select(Weekly_Sales, Dept, IsHoliday) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92 * IsHoliday, .) %>%
summary
#Is there an interaction effect of unemployment rate on performance of Dept 92? Probably a discretionary item.
train %>%
select(Weekly_Sales, Dept, IsHoliday) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92 * IsHoliday, .) %>%
summary
train %>%
select(Weekly_Sales, Dept) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92, .) %>%
summary
#What if you control for IsHoliday?
train %>%
select(Weekly_Sales, Dept, IsHoliday) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92 + IsHoliday, .) %>%
summary
#Is there an interaction effect of unemployment rate on performance of Dept 92? Probably a discretionary item.
train %>%
select(Weekly_Sales, Dept, IsHoliday) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92 * IsHoliday, .) %>%
summary
print("What is the effect of unemployment on sales?")
summary(lm(Weekly_Sales ~ Unemployment, train))
print("What is the effect of unemployment on sales?")
summary(lm(Weekly_Sales ~ Unemployment, train))
print("What if we control for IsHoliday?")
summary(lm(Weekly_Sales ~ Unemployment + IsHoliday, train))
print("Is there an interaction effect? (Is the relationship of Unemployment and Sales different on holidays?)")
summary(lm(Weekly_Sales ~ Unemployment * IsHoliday, train))
print("What is the effect of unemployment on sales?")
summary(lm(Weekly_Sales ~ Unemployment, train))
print("What if we control for IsHoliday?")
summary(lm(Weekly_Sales ~ Unemployment + IsHoliday, train))
print("Is there an interaction effect? (Is the relationship of Unemployment and Sales different on holidays?)")
summary(lm(Weekly_Sales ~ Unemployment * IsHoliday, train))
print("What is the impact of Dept 92 on Sales?")
train %>%
select(Weekly_Sales, Dept) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92, .) %>%
summary
print("What if you control for IsHoliday?")
train %>%
select(Weekly_Sales, Dept, IsHoliday) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92 + IsHoliday, .) %>%
summary
print("Is there an interaction effect of unemployment rate on performance of Dept 92? Probably a discretionary item.")
train %>%
select(Weekly_Sales, Dept, IsHoliday) %>%
mutate(IsDept92 = Dept == 92) %>%
lm(Weekly_Sales ~ IsDept92 * IsHoliday, .) %>%
summary
print("/n/nWhat is the effect of unemployment on sales?")
summary(lm(Weekly_Sales ~ Unemployment, train))
print("/n/nWhat if we control for IsHoliday?")
summary(lm(Weekly_Sales ~ Unemployment + IsHoliday, train))
print("\n\nWhat is the effect of unemployment on sales?")
summary(lm(Weekly_Sales ~ Unemployment, train))
print("\n\nWhat if we control for IsHoliday?")
summary(lm(Weekly_Sales ~ Unemployment + IsHoliday, train))
store_20_sales <- df %>%
filter(Store == 20) %>%
select(Weekly_Sales) %>%
unlist
store_4_sales <- df %>%
filter(Store == 4) %>%
select(Weekly_Sales) %>%
unlist
twenty_vs_four <- stats::t.test(store_20_sales, store_4_sales, conf.level = .95)
twenty_vs_four
store_39_sales <- df %>%
filter(Store == 39) %>%
select(Weekly_Sales) %>%
unlist
twenty_vs_thirtynine <- stats::t.test(store_20_sales, store_39_sales, conf.level = .95)
twenty_vs_thirtynine
train %>%
ggplot(aes(Size, Weekly_Sales)) + geom_point()
train %>%
ggplot(aes(Size, Weekly_Sales)) + geom_point(alpha = .05)
train %>%
ggplot(aes(Size, Weekly_Sales)) + geom_point(alpha = .05) + geom_smooth(method = "lm")
data_frame(res = summary(lm1)$residuals, index = 1:length(summary(lm1)$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7, se = T) +
coord_cartesian(ylim = c(-25000, 25000)) +
labs(title = "Do the residuals (observed - fitted) look non-systematic? ",
y = "Residuals",
x = element_blank()) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_y_continuous(label = dollar)
lm1 <- lm(Weekly_Sales ~ factor(Store), df)
lm1 %>%
summary %>%
names
#How much of the variation is captured in the model?
summary(lm1)$r.squared
summary(lm1)$adj.r.squared
data_frame(res = summary(lm1)$residuals, index = 1:length(summary(lm1)$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7, se = T) +
coord_cartesian(ylim = c(-25000, 25000)) +
labs(title = "Do the residuals (observed - fitted) look non-systematic? ",
y = "Residuals",
x = element_blank()) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_y_continuous(label = dollar)
