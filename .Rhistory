Date == "2013-02-08", 1, 0),
LaborDay = ifelse(Date == "2010-09-10" |
Date == "2011-09-09" |
Date == "2012-09-07" |
Date == "2013-09-06", 1, 0),
Thanksgiving = ifelse(Date == "2010-11-26" |
Date == "2011-11-25" |
Date == "2012-11-23" |
Date == "2013-11-29", 1, 0),
Christmas = ifelse(Date == "2010-12-31" |
Date == "2011-12-30" |
Date == "2012-12-28" |
Date == "2013-12-27", 1, 0)
)
train <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
stores <- read_csv("data/stores.csv")
features <- read_csv("data/features.csv")
train %<>% mutate(is_train = 1)
test %<>% mutate(is_train = 0)
full <- train %>%
bind_rows(test) %>%
left_join(stores, "Store") %>%
left_join(features, c("Store", "Date"))
full %<>%
mutate(Superbowl = ifelse(Date == "2010-02-12" |
Date == "2011-02-11" |
Date == "2012-02-10" |
Date == "2013-02-08", 1, 0),
LaborDay = ifelse(Date == "2010-09-10" |
Date == "2011-09-09" |
Date == "2012-09-07" |
Date == "2013-09-06", 1, 0),
Thanksgiving = ifelse(Date == "2010-11-26" |
Date == "2011-11-25" |
Date == "2012-11-23" |
Date == "2013-11-29", 1, 0),
Christmas = ifelse(Date == "2010-12-31" |
Date == "2011-12-30" |
Date == "2012-12-28" |
Date == "2013-12-27", 1, 0)
)
rep("Superbowl", 4)
full %>%
left_join(data_frame(Date = c("2010-02-12", "2011-02-11", "2012-02-10", "2013-02-08",
"2010-09-10", "2011-09-09", "2012-09-07", "2013-09-06",
"2010-11-26", "2011-11-25", "2012-11-23", "2013-11-29",
"2010-12-31", "2011-12-30", "2012-12-28", "2013-12-27"
),
Holiday = c(rep("Superbowl", 4),
rep("LaborDay", 4),
rep("Thanksgiving", 4),
rep("Christmas", 4)
)
),
by = "Date"
)
full %>%
left_join(data_frame(Date = as.Date(c("2010-02-12", "2011-02-11", "2012-02-10", "2013-02-08",
"2010-09-10", "2011-09-09", "2012-09-07", "2013-09-06",
"2010-11-26", "2011-11-25", "2012-11-23", "2013-11-29",
"2010-12-31", "2011-12-30", "2012-12-28", "2013-12-27"
)),
Holiday = c(rep("Superbowl", 4),
rep("LaborDay", 4),
rep("Thanksgiving", 4),
rep("Christmas", 4)
)
),
by = "Date"
)
full %<>%
left_join(data_frame(Date = as.Date(c("2010-02-12", "2011-02-11", "2012-02-10", "2013-02-08",
"2010-09-10", "2011-09-09", "2012-09-07", "2013-09-06",
"2010-11-26", "2011-11-25", "2012-11-23", "2013-11-29",
"2010-12-31", "2011-12-30", "2012-12-28", "2013-12-27"
)),
Holiday = c(rep("Superbowl", 4),
rep("LaborDay", 4),
rep("Thanksgiving", 4),
rep("Christmas", 4)
)
),
by = "Date"
)
#Load necessary libraries
#install.packages("tidyverse")
#install.packages("magrittr")
#install.packages("Hmisc")
#install.packages("scales")
library(scales)
library(Hmisc)
library(magrittr)
library(tidyverse)
#Load data
train <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
stores <- read_csv("data/stores.csv")
features <- read_csv("data/features.csv")
#Make full data set with all tables combined
train %<>% mutate(is_train = 1)
test %<>% mutate(is_train = 0)
full <- train %>%
bind_rows(test) %>%
left_join(stores, "Store") %>%
left_join(features, c("Store", "Date"))
#Add specific holiday to data set
full %<>%
left_join(data_frame(Date = as.Date(c("2010-02-12", "2011-02-11", "2012-02-10", "2013-02-08",
"2010-09-10", "2011-09-09", "2012-09-07", "2013-09-06",
"2010-11-26", "2011-11-25", "2012-11-23", "2013-11-29",
"2010-12-31", "2011-12-30", "2012-12-28", "2013-12-27"
)),
Holiday = c(rep("Superbowl", 4),
rep("LaborDay", 4),
rep("Thanksgiving", 4),
rep("Christmas", 4)
)
),
by = "Date"
)
#Look at full dataset
glimpse(full)
summary(full)
#Split back into train and test sets with complete features
train <- full %>%
filter(is_train == 1) %>%
select(-is_train)
test <- full %>%
filter(is_train == 0) %>%
select(-is_train)
rm(features, full, stores)
summary(lm(Weekly_Sales ~ factor(Store), data = train))
summary(lm(Weekly_Sales ~ factor(Store) + is_Holiday, data = train))
summary(lm(Weekly_Sales ~ factor(Store) + IsHoliday, data = train))
full$IsHoliday.x == full$IsHoliday.y
full <- train %>%
bind_rows(test) %>%
left_join(stores, "Store") %>%
left_join(features, c("Store", "Date"))
full$IsHoliday.x == full$IsHoliday.y
train$IsHoliday.x == train$IsHoliday.y
train %>%
select(-IsHoliday.x) %>%
rename(IsHoliday = IsHoliday.y)
train %<>%
select(-IsHoliday.x) %>%
rename(IsHoliday = IsHoliday.y)
summary(lm(Weekly_Sales ~ factor(Store) + IsHoliday, data = train))
summary(lm(Weekly_Sales ~ factor(Store) + IsHoliday, data = train)) %>%
tidy %>%
filter(term == "IsHolidayTRUE")
summary(lm(Weekly_Sales ~ factor(Store) + IsHoliday, data = train)) %>%
tidy %>%
select(term, estimate, p.value) %>%
arrange(abs(estimate)) %>%
mutate(p.value = round(p.value, 3),
estimate = round(estimate, 1)) %>%
slice(c(1:4,45))
summary(lm(Weekly_Sales ~ factor(Store) + IsHoliday, data = train)) %>%
tidy %>%
select(term, estimate, p.value) %>%
arrange(abs(estimate)) %>%
mutate(p.value = round(p.value, 3),
estimate = round(estimate, 1)) %>%
slice(c(1:4,46))
summary(lm(Weekly_Sales ~ factor(Store) + IsHoliday, data = train)) %>%
tidy %>%
select(term, estimate, p.value) %>%
arrange(abs(estimate)) %>%
mutate(p.value = round(p.value, 3),
estimate = round(estimate, 1)) %>%
slice(c(1:4,46)) %>%
bind_rows(lm_simplified_output)
#Check output of simple linear model
summary(lm(Weekly_Sales ~ factor(Store), data = train))
#Tidy output, rank, and compare
lm_simplified_output <- summary(lm(Weekly_Sales ~ factor(Store), data = train)) %>%
tidy %>%
select(term, estimate, p.value) %>%
arrange(abs(estimate)) %>%
mutate(p.value = round(p.value, 3),
estimate = round(estimate, 1)) %>%
slice(c(1:4,45))
#Create a conditional mean for each store in simplifed list
store1_mean <- train %>% filter(Store == 1) %>% select(Weekly_Sales) %>% unlist %>% mean
store6_mean <- train %>% filter(Store == 6) %>% select(Weekly_Sales) %>% unlist %>% mean
store39_mean <- train %>% filter(Store == 39) %>% select(Weekly_Sales) %>% unlist %>% mean
store19_mean <- train %>% filter(Store == 19) %>% select(Weekly_Sales) %>% unlist %>% mean
store23_mean <- train %>% filter(Store == 23) %>% select(Weekly_Sales) %>% unlist %>% mean
#Compare mean calculated from data with mean calculated from model output
lm_simplified_output %>%
mutate(means_from_data = c(store6_mean, store39_mean, store19_mean, store23_mean, store1_mean),
means_from_model = ifelse(term == "(Intercept)",
estimate,
estimate[5] + estimate))
lm2_simplified_output <- summary(lm(Weekly_Sales ~ factor(Store) + IsHoliday, data = train)) %>%
tidy %>%
select(term, estimate, p.value) %>%
arrange(abs(estimate)) %>%
mutate(p.value = round(p.value, 3),
estimate = round(estimate, 1)) %>%
slice(c(1:4,46))
lm2_simplified_output %>%
bind_rows(lm_simplified_output)
summary(lm(Weekly_Sales ~ factor(Store) + IsHoliday + Size + Temperature + Fuel_Price, data = train)) %>%
tidy %>%
select(term, estimate, p.value) %>%
arrange(abs(estimate)) %>%
mutate(p.value = round(p.value, 3),
estimate = round(estimate, 1)) %>%
slice(c(1:4,46))
summary(lm(Weekly_Sales ~ factor(Store) + IsHoliday, data = train))
summary(lm(Weekly_Sales ~ factor(Store) + factor(Holiday), data = train))
summary(lm(Weekly_Sales ~ factor(Store), data = train))
summary(lm(Weekly_Sales ~ factor(Store), data = train)) %>% names
lm1 <- summary(lm(Weekly_Sales ~ factor(Store), data = train))
lm1 %>% names
lm1$r.squared
lm1$sigma
lm1$residuals
ggplot(lm1, aes(residuals)) + geom_point()
ggplot(lm1, aes(residuals)) + geom_jitter()
ggplot(aes(lm1$residuals)) + geom_jitter()
ggplot(lm1$residuals) + geom_jitter()
plot(lm1$residuals)
plot(lm1)
plot(lm1$residuals)
data_frame(res = lm1$residuals, index = row_number) %>%
ggplot(aes(res, index)) + geom_point()
data_frame(res = lm1$residuals, index = row_number(lm1$residuals))
data_frame(res = lm1$residuals, index = row_number(lm1$residuals)) %>%
ggplot(aes(res, index)) + geom_point()
data_frame(res = lm1$residuals, index = row_number(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .05)
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .05)
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .05) +
geom_hline(yintercept = 0) +
geom_smooth()
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01) +
geom_hline(yintercept = 0, color = "red", linetype = "dotted") +
geom_smooth(color = "red")
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .001) +
geom_hline(yintercept = 0, color = "red", linetype = "dotted") +
geom_smooth(color = "red") +
coord_cartesian(limits = c(-50000, 200000))
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .001) +
geom_hline(yintercept = 0, color = "red", linetype = "dotted") +
geom_smooth(color = "red") +
coord_cartesian(ylim = c(-50000, 200000))
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", linetype = "dotted") +
geom_smooth(color = "red") +
coord_cartesian(ylim = c(-50000, 200000))
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
geom_smooth(color = "red") +
coord_cartesian(ylim = c(-50000, 200000))
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-50000, 200000))
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000))
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000)) +
labs(title = "Residuals look non-systematic",
y = "Residuals",
x = element_blank()) +
theme_bw()
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000)) +
labs(title = "Residuals look non-systematic",
y = "Residuals",
x = element_blank()) +
theme_bw(axis.x.text = element_blank())
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000)) +
labs(title = "Residuals look non-systematic",
y = "Residuals",
x = element_blank()) +
theme_bw() +
theme(axis.x.text = element_blank())
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000)) +
labs(title = "Residuals look non-systematic",
y = "Residuals",
x = element_blank()) +
theme_bw(axis.text.x = element_blank())
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000)) +
labs(title = "Residuals look non-systematic",
y = "Residuals",
x = element_blank()) +
theme_bw() +
theme(axis.text.x = element_blank())
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 50000)) +
labs(title = "Residuals look non-systematic",
y = "Residuals",
x = element_blank()) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_y_continuous(label = dollar)
data_frame(res = lm1$residuals, index = 1:length(lm1$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 25000)) +
labs(title = "Do the residuals (observed - fitted) look non-systematic? ",
y = "Residuals",
x = element_blank()) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_y_continuous(label = dollar)
plot(lm1)
lm1
lm1 <- lm(Weekly_Sales ~ factor(Store), train)
lm1 %>% summary %>% names
lm1$r.squared
lm1 %>% summary$r.squared
lm1 %>% summary %>% select(r.squared)
lm1 %>% summary
lm1 %>% summary %>% select($r.squared)
lm1 %>% summary["r.squared"]
summary(lm1)$r.squared
data_frame(res = summary(lm1)$residuals, index = 1:length(summary(lm1)$residuals)) %>%
ggplot(aes(index, res)) +
geom_point(alpha = .01, size = .1) +
geom_hline(yintercept = 0, color = "red", size = 1, alpha = .4) +
geom_smooth(color = "blue", size = .7) +
coord_cartesian(ylim = c(-25000, 25000)) +
labs(title = "Do the residuals (observed - fitted) look non-systematic? ",
y = "Residuals",
x = element_blank()) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
scale_y_continuous(label = dollar)
plot(lm1)
par(mfrow=c(2,2)) # Change the panel layout to 2 x 2
plot(lm1)
par(mfrow=c(1,1)) # Change back to 1 x 1
par(mfrow=c(2,2)) # Change the panel layout to 2 x 2
plot(lm1)
par(mfrow=c(1,1)) # Most prefer to change immediately back to 1 x 1, avoid later surprises
lm2 <- lm(Weekly_Sales ~ IsHoliday, train)
plot(lm2)
train[95374,]
print(train[95374,])
train %>%
filter(95374)
train %>%
filter(rownumber(95374))
train %>%
slice(95374)
train %>%
slice(95374) %>%
select(*)
train %>%
slice(95374) %>%
names
train %>%
slice(95374) %>%
select(Store, Date, Holiday, Weekly_Sales)
lm3 <- lm(Weekly_Sales ~ Size, train)
plot(lm3)
train[95374]
train[,95374]
train[95374,]
train[[95374]]
train %>% slice(95374)
train %>% slice(338014)
train %>%
slice(95374) %>%
select(Store, Date, Holiday, Weekly_Sales)
train %>%
slice(95374) %>% names
select(Date, Holiday, Weekly_Sales)
train %>%
slice(95374) %>%
select(Store, Date, Holiday, Weekly_Sales)
select(Date, Holiday, Weekly_Sales)
train %>%
select(Store, Date, Holiday, Weekly_Sales) %>%
slice(95374)
slice(95374L)
train %>%
select(Store, Date, Holiday, Weekly_Sales) %>%
slice(95374:95376)
train %>%
select(Store, Date, Holiday, Weekly_Sales)
train
train %>%
select(Store, Date, IsHoliday, Weekly_Sales) %>%
slice(95374:95376)
train %>%
select(Store, Date, IsHoliday, Weekly_Sales) %>%
slice(95374:95376)
train %>% select(Store, Date, IsHoliday, Weekly_Sales) %>% slice(95374:95376)
train %>% select(Store, Date, IsHoliday, Weekly_Sales) %>% slice(95374)
train %>% select(Store, Date, IsHoliday, Weekly_Sales) %>% slice(95374,338014)
train %>% select(Store, Date, IsHoliday, Weekly_Sales) %>% slice(95374, 338014)
train %>% select(Store, Date, IsHoliday, Weekly_Sales) %>% slice(c(95374, 338014))
lm(Weekly_Sales ~ IsHoliday, train) %>% plot
par(mfrow=c(2,2)) # Change the panel layout to 2 x 2
lm(Weekly_Sales ~ ., train) %>% plot
par(mfrow=c(2,2)) # Change the panel layout to 2 x 2
lm(Weekly_Sales ~ ., train) %>% plot
train %>% select(Store, Date, IsHoliday, Weekly_Sales) %>% slice(c(224464, 37254, 954266))
#Load necessary libraries
#install.packages("tidyverse")
#install.packages("magrittr")
#install.packages("Hmisc")
#install.packages("scales")
#install.packages("caret")
library(caret)
library(lubridate)
library(stringr)
library(broom)
library(scales)
library(Hmisc)
library(magrittr)
library(tidyverse)
#Load data
train <- read_csv("data/train.csv")
test <- read_csv("data/test.csv")
stores <- read_csv("data/stores.csv")
features <- read_csv("data/features.csv")
#Make full data set with all tables combined
train %<>% mutate(is_train = 1)
test %<>% mutate(is_train = 0)
full <- train %>%
bind_rows(test) %>%
left_join(stores, "Store") %>%
left_join(features, c("Store", "Date")) %>%
select(-IsHoliday.x) %>%
rename(IsHoliday = IsHoliday.y)
#Add specific holiday to data set
full %<>%
left_join(data_frame(Date = as.Date(c("2010-02-12", "2011-02-11", "2012-02-10", "2013-02-08",
"2010-09-10", "2011-09-09", "2012-09-07", "2013-09-06",
"2010-11-26", "2011-11-25", "2012-11-23", "2013-11-29",
"2010-12-31", "2011-12-30", "2012-12-28", "2013-12-27"
)),
Holiday = c(rep("Superbowl", 4),
rep("LaborDay", 4),
rep("Thanksgiving", 4),
rep("Christmas", 4)
)
),
by = "Date"
)
#Look at full dataset
#glimpse(full)
summary(full)
#Split back into train and test sets with complete features
train <- full %>%
filter(is_train == 1) %>%
select(-is_train)
test <- full %>%
filter(is_train == 0) %>%
select(-is_train)
rm(features, full, stores)
